Indexing

1. Create collection - stud with fields (rno, name, class):
db.createCollection(&quot;stud&quot;)
db.stud.insertMany([
{ rno: 1, name: &quot;Alice&quot;, class: &quot;A&quot; },
{ rno: 2, name: &quot;Bob&quot;, class: &quot;B&quot; },
{ rno: 3, name: &quot;Charlie&quot;, class: &quot;A&quot; }
])

2. Create Single index on field rno in ascending order:
db.stud.createIndex({ rno: 1 })

3. Create Unique index on field rno:
db.stud.createIndex({ rno: 1 }, { unique: true })

4. Create compound index on field rno in ascending order and name in
descending order:
db.stud.createIndex({ rno: 1, name: -1 })

5. Display index created on stud collection:
db.stud.getIndexes()

6. Drop index:
db.stud.dropIndex({ rno: 1 })

Aggregation

1. Create collection Product and insert documents:
db.createCollection(&quot;Product&quot;)
db.Product.insertMany([
{ item: &#39;paste&#39;, amount: 40, customer: &#39;Mike&#39; },
{ item: &#39;Guitar&#39;, amount: 200, customer: &#39;Tom&#39; },
{ item: &#39;milk&#39;, amount: 60, customer: &#39;Mike&#39; },
{ item: &#39;pizza&#39;, amount: 150, customer: &#39;Kiran&#39; },
{ item: &#39;paste&#39;, amount: 40, customer: &#39;Kiran&#39; },
{ item: &#39;pizza&#39;, amount: 150, customer: &#39;Devika&#39; },
{ item: &#39;paste&#39;, amount: 40, customer: &#39;Mike&#39; },
{ item: &#39;paste&#39;, amount: 40, customer: &#39;Niraj&#39; },
{ item: &#39;Guitar&#39;, amount: 200, customer: &#39;Reena&#39; },
{ item: &#39;milk&#39;, amount: 60, customer: &#39;Mike&#39; },
{ item: &#39;pizza&#39;, amount: 150, customer: &#39;Devika&#39; },
{ item: &#39;paste&#39;, amount: 40, customer: &#39;Devika&#39; },
{ item: &#39;pizza&#39;, amount: 150, customer: &#39;Kiran&#39; },
{ item: &#39;paste&#39;, amount: 40, customer: &#39;Reena&#39; }
])

2. Perform Aggregate Operations:

Minimum ($min):
db.Product.aggregate([
{ $group: { _id: item, minAmount: { $min: &quot;$amount&quot; } } }
])

Maximum ($max):
db.Product.aggregate([
{ $group: { _id: item, maxAmount: { $max: &quot;$amount&quot; } } }
])

Sum ($sum):
db.Product.aggregate([
{ $group: { _id: null, totalAmount: { $sum: &quot;$amount&quot; } } }
])

Average ($avg):
db.Product.aggregate([
{ $group: { _id: null, avgAmount: { $avg: &quot;$amount&quot; } } }
])

First ($first):
db.Product.aggregate([
{ $group: { _id: null, firstItem: { $first: &quot;$item&quot; } } }
])

Last ($last):
db.Product.aggregate([
{ $group: { _id: null, lastItem: { $last: &quot;$item&quot; } } }
])